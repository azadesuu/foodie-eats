{
  "stats": {
    "suites": 20,
    "tests": 49,
    "passes": 48,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-04T19:36:40.796Z",
    "end": "2022-11-04T19:36:43.498Z",
    "duration": 2702,
    "testsRegistered": 49,
    "passPercent": 97.95918367346938,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36438456-0901-46b2-af50-220f1c962283",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await connectDB();",
          "err": {},
          "uuid": "97cdd7cd-13ff-45e4-83e4-69dcda02848f",
          "parentUUID": "36438456-0901-46b2-af50-220f1c962283",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await closeDB();\nawait server.kill(() => {\n  console.log(\"Closing test server..\");\n  console.log(\"End of tests.\");\n  //the server is down when this is called. That won't take long. (<10s)\n});",
          "err": {},
          "uuid": "bc7dd7a5-8a72-4da2-8b61-28df0cf5c89c",
          "parentUUID": "36438456-0901-46b2-af50-220f1c962283",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "9d2aed54-66e8-4261-81c6-be63294431e4",
          "title": "Unit tests ",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unit tests \"",
              "fullTitle": "Unit tests  \"after all\" hook in \"Unit tests \"",
              "timedOut": false,
              "duration": 67,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "0323cbd4-c358-415c-8690-50a57efa531b",
              "parentUUID": "9d2aed54-66e8-4261-81c6-be63294431e4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
              "title": "Registration ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Registers the user",
                  "fullTitle": "Unit tests  Registration  Registers the user",
                  "timedOut": false,
                  "duration": 693,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "8083e1ff-32af-4d60-81ff-21ec05003c76",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (email)",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "f5293ef0-92d8-42c9-b1b6-a86c02ca96bf",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (username)",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupUsername)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "b7ed0eae-e6fe-45bc-b9a3-6b077430156c",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the empty field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the empty field (email)",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserNoEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Username/email not defined.\"\n    });\n  });",
                  "err": {},
                  "uuid": "a36a3438-b070-4e54-8bb0-309c517f1a1a",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (username)",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidUname)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your username isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "eb0638e3-fe9f-4d84-b2ab-2f106ad99763",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "ab66267c-dbb8-4fdf-bed4-db79f6c699e0",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "f5a5d04b-c824-43a7-8946-3adeebf85593",
                  "parentUUID": "727867f0-77e5-4561-9ac5-f9830cd4ab9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8083e1ff-32af-4d60-81ff-21ec05003c76",
                "f5293ef0-92d8-42c9-b1b6-a86c02ca96bf",
                "b7ed0eae-e6fe-45bc-b9a3-6b077430156c",
                "a36a3438-b070-4e54-8bb0-309c517f1a1a",
                "eb0638e3-fe9f-4d84-b2ab-2f106ad99763",
                "ab66267c-dbb8-4fdf-bed4-db79f6c699e0",
                "f5a5d04b-c824-43a7-8946-3adeebf85593"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 850,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ebebf910-50e5-467f-9d5a-797b228dcf08",
              "title": "Get Reviews ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get recent reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get recent reviews",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByRecent\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Recent reviews found\" });\n  });",
                  "err": {},
                  "uuid": "e017f183-d596-49fa-8009-a74c9d6bf799",
                  "parentUUID": "ebebf910-50e5-467f-9d5a-797b228dcf08",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get top reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get top reviews",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByLikes\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Most liked reviews found.\" });\n  });",
                  "err": {},
                  "uuid": "c62fa920-a26d-4fe9-824d-7f970c9f48ef",
                  "parentUUID": "ebebf910-50e5-467f-9d5a-797b228dcf08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e017f183-d596-49fa-8009-a74c9d6bf799",
                "c62fa920-a26d-4fe9-824d-7f970c9f48ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5bdf29f3-68c9-41cc-9098-5e6a30c19a27",
              "title": "Get one user ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one user",
                  "fullTitle": "Unit tests  Get one user  Get one user",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/azadesuu\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "ae5c3e3b-b7ef-4614-8d78-1b45e6b0412b",
                  "parentUUID": "5bdf29f3-68c9-41cc-9098-5e6a30c19a27",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't get invalid user",
                  "fullTitle": "Unit tests  Get one user  Doesn't get invalid user",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/aza\")\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "a09598be-f099-47f5-9600-cc3467c358e0",
                  "parentUUID": "5bdf29f3-68c9-41cc-9098-5e6a30c19a27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae5c3e3b-b7ef-4614-8d78-1b45e6b0412b",
                "a09598be-f099-47f5-9600-cc3467c358e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3892dd26-4c5d-4bf4-86ac-0756b0654820",
          "title": "Integration tests: Review methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"before all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 119,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "04f3ec9f-bada-46e6-8f0e-d03aec9138eb",
              "parentUUID": "3892dd26-4c5d-4bf4-86ac-0756b0654820",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"after all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 65,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "d5063062-4274-4504-9d95-8405e966e76a",
              "parentUUID": "3892dd26-4c5d-4bf4-86ac-0756b0654820",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "aa63bd95-ce07-4cea-b18d-e758f5d4814e",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "1efd55c1-361a-4406-a9fd-8dc0e548d4bc",
                  "parentUUID": "aa63bd95-ce07-4cea-b18d-e758f5d4814e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "05d355ae-8bbb-4ff2-b005-75951133ee41",
                  "parentUUID": "aa63bd95-ce07-4cea-b18d-e758f5d4814e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1efd55c1-361a-4406-a9fd-8dc0e548d4bc",
                "05d355ae-8bbb-4ff2-b005-75951133ee41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "43ee2f15-80b5-4e24-9dc8-c9ea5b7bb95a",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "cda933c5-2a79-41f8-a0aa-0d78b8538730",
                  "parentUUID": "43ee2f15-80b5-4e24-9dc8-c9ea5b7bb95a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "5d40b3c1-cbb2-4f7d-9912-a1babfe5a097",
                  "parentUUID": "43ee2f15-80b5-4e24-9dc8-c9ea5b7bb95a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "ba10f866-7b39-446d-a3b5-e62d51926a4d",
                  "parentUUID": "43ee2f15-80b5-4e24-9dc8-c9ea5b7bb95a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cda933c5-2a79-41f8-a0aa-0d78b8538730",
                "5d40b3c1-cbb2-4f7d-9912-a1babfe5a097",
                "ba10f866-7b39-446d-a3b5-e62d51926a4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 184,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3c4e722c-5121-4985-9b67-b1de31af5cc1",
              "title": "Integration: Authenticate user",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Valid access token provided",
                  "fullTitle": "Integration tests: Review methods Integration: Authenticate user Valid access token provided",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/findTokenUser\")\n  .send(\"Authorization\", \"Bearer \" + access_token)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "4dd17f8b-42e9-48eb-a922-e1359269e8d2",
                  "parentUUID": "3c4e722c-5121-4985-9b67-b1de31af5cc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4dd17f8b-42e9-48eb-a922-e1359269e8d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "112f1bb2-ecde-4923-89c3-f93358d57b99",
              "title": "Integration: Create Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 1",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "4bf06c8a-6c36-4b0f-969f-79b2a785edc9",
                  "parentUUID": "112f1bb2-ecde-4923-89c3-f93358d57b99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Creates a review: Review 2",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 2",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "dbd15a3f-7465-4e6b-a72a-97e69f63079f",
                  "parentUUID": "112f1bb2-ecde-4923-89c3-f93358d57b99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (userId)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (userId)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongUserId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "b784ab3d-32a9-43ab-bd11-06f1f931d200",
                  "parentUUID": "112f1bb2-ecde-4923-89c3-f93358d57b99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (dateVisited)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (dateVisited)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongDateVisited)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "706300ab-91d3-4d00-8891-e6829e87bf5c",
                  "parentUUID": "112f1bb2-ecde-4923-89c3-f93358d57b99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bf06c8a-6c36-4b0f-969f-79b2a785edc9",
                "dbd15a3f-7465-4e6b-a72a-97e69f63079f",
                "b784ab3d-32a9-43ab-bd11-06f1f931d200",
                "706300ab-91d3-4d00-8891-e6829e87bf5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6cc80f8c-0122-43f5-80c4-c315d266b2b0",
              "title": "Integration: Update Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates a review: Review 1 (Price Range)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Price Range)",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewPriceRange)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "6f28c367-431e-40e9-86c7-b3d2b88730ba",
                  "parentUUID": "6cc80f8c-0122-43f5-80c4-c315d266b2b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates a review: Review 1 (Description)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Description)",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewDescription)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "4dd959a4-230d-4768-be0b-f0a5b1237e5d",
                  "parentUUID": "6cc80f8c-0122-43f5-80c4-c315d266b2b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't update a review: Review (No Review Id) ",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Doesn't update a review: Review (No Review Id) ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewNoId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "1fefe830-858a-4c34-a30f-f330fcf948f8",
                  "parentUUID": "6cc80f8c-0122-43f5-80c4-c315d266b2b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f28c367-431e-40e9-86c7-b3d2b88730ba",
                "4dd959a4-230d-4768-be0b-f0a5b1237e5d",
                "1fefe830-858a-4c34-a30f-f330fcf948f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 68,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "11870e87-36dd-4e2d-87b4-5743fcc88486",
              "title": "Integration: Like Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Likes a review: Review 1",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully liked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "a099512c-934f-4549-a557-f790a3224ae3",
                  "parentUUID": "11870e87-36dd-4e2d-87b4-5743fcc88486",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Un-likes a review: Review 1",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully unliked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "2b1eb2cb-d5c7-4a79-9061-3c3271926e0b",
                  "parentUUID": "11870e87-36dd-4e2d-87b4-5743fcc88486",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to like a review: Review 1 (likeBool undefined)",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Failed to like a review: Review 1 (likeBool undefined)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "50f05647-3931-4656-babd-d7f8500979a0",
                  "parentUUID": "11870e87-36dd-4e2d-87b4-5743fcc88486",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a099512c-934f-4549-a557-f790a3224ae3",
                "2b1eb2cb-d5c7-4a79-9061-3c3271926e0b",
                "50f05647-3931-4656-babd-d7f8500979a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "52804e3a-a4bd-4ea0-9567-96e372f2d4fc",
              "title": "Integration: Delete Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deletes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Deletes a review: Review 1",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review deleted.\"\n    });\n  });",
                  "err": {},
                  "uuid": "67f3d749-0f32-475b-94d5-4bdbbbd31c3b",
                  "parentUUID": "52804e3a-a4bd-4ea0-9567-96e372f2d4fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Fails to delete a review: Review 1 (already deleted) ",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Fails to delete a review: Review 1 (already deleted) ",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "112babe3-c94e-4087-9500-32451e714968",
                  "parentUUID": "52804e3a-a4bd-4ea0-9567-96e372f2d4fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67f3d749-0f32-475b-94d5-4bdbbbd31c3b",
                "112babe3-c94e-4087-9500-32451e714968"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09d267c8-9d82-4854-b98c-5c6bdbc3bf77",
          "title": "Integration tests: Account methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"before all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 111,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "47a88a49-0722-4008-aa7b-fbfaf229a7cf",
              "parentUUID": "09d267c8-9d82-4854-b98c-5c6bdbc3bf77",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"after all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 66,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "4d6abf58-c3d9-497c-afe1-6252bfdf4e1f",
              "parentUUID": "09d267c8-9d82-4854-b98c-5c6bdbc3bf77",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "07ae774f-9c73-4820-8d15-c9ab38ec1ba1",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "f25f5f35-96be-440f-b29e-d59ba989d14b",
                  "parentUUID": "07ae774f-9c73-4820-8d15-c9ab38ec1ba1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "849fb2f3-03d5-4f33-bdee-bc6d087900ad",
                  "parentUUID": "07ae774f-9c73-4820-8d15-c9ab38ec1ba1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f25f5f35-96be-440f-b29e-d59ba989d14b",
                "849fb2f3-03d5-4f33-bdee-bc6d087900ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7d4d882e-cb07-4324-8e7c-c60f728ac653",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "ba89e84f-d808-44d0-914e-b15b56a3fb1e",
                  "parentUUID": "7d4d882e-cb07-4324-8e7c-c60f728ac653",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "a7cbd48a-7eef-40c8-b2ab-b7161f909fa4",
                  "parentUUID": "7d4d882e-cb07-4324-8e7c-c60f728ac653",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "c4f3d751-92cd-41f6-bf86-d81a18df881c",
                  "parentUUID": "7d4d882e-cb07-4324-8e7c-c60f728ac653",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba89e84f-d808-44d0-914e-b15b56a3fb1e",
                "a7cbd48a-7eef-40c8-b2ab-b7161f909fa4",
                "c4f3d751-92cd-41f6-bf86-d81a18df881c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 184,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3387241b-91f8-4888-8adc-bc71bfce49f2",
              "title": "Integration: Get My Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get my reviews: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get My Reviews Get my reviews: User 1",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/my-reviews/${userId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My reviews found.\"\n    });\n  });",
                  "err": {},
                  "uuid": "4cc59a99-6f2a-4729-bef8-bf42e2d7fe18",
                  "parentUUID": "3387241b-91f8-4888-8adc-bc71bfce49f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get my reviews: User 2 (cannot access)",
                  "fullTitle": "Integration tests: Account methods Integration: Get My Reviews Get my reviews: User 2 (cannot access)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/my-reviews/${userId2}`)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {
                    "message": "AssertionError: 400 == 200",
                    "estack": "AssertionError [ERR_ASSERTION]: 400 == 200\n    at C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js:566:18\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test\\apptest.js:563:14)",
                    "diff": "- 400\n+ 200\n"
                  },
                  "uuid": "49006598-aca8-4928-a604-4963018a2551",
                  "parentUUID": "3387241b-91f8-4888-8adc-bc71bfce49f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cc59a99-6f2a-4729-bef8-bf42e2d7fe18"
              ],
              "failures": [
                "49006598-aca8-4928-a604-4963018a2551"
              ],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a441ec40-116b-4ebb-befb-bf8614be558a",
              "title": "Integration: Get Other Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get other reviews: User 3 (list of 1)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 3 (list of 1)",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId3}`)\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "efdf66de-fcf5-4e88-9c74-8742beacdb5a",
                  "parentUUID": "a441ec40-116b-4ebb-befb-bf8614be558a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get other reviews: User 2 (list of 0)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 2 (list of 0)",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId2}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(0, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "30f116a3-f2ef-4d18-b7a1-8487a8b0c5e3",
                  "parentUUID": "a441ec40-116b-4ebb-befb-bf8614be558a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efdf66de-fcf5-4e88-9c74-8742beacdb5a",
                "30f116a3-f2ef-4d18-b7a1-8487a8b0c5e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "81609f8b-614c-4abf-8149-2a2733965307",
              "title": "Integration: Bookmark Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "5069c666-edd0-4469-a590-d09e2e232ac2",
                  "parentUUID": "81609f8b-614c-4abf-8149-2a2733965307",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Un-bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was un-bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "f59b1f71-e67f-4985-b83b-6173d5b1eb5c",
                  "parentUUID": "81609f8b-614c-4abf-8149-2a2733965307",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "a0bd4799-a431-4c42-8489-5808a1b431c9",
                  "parentUUID": "81609f8b-614c-4abf-8149-2a2733965307",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5069c666-edd0-4469-a590-d09e2e232ac2",
                "f59b1f71-e67f-4985-b83b-6173d5b1eb5c",
                "a0bd4799-a431-4c42-8489-5808a1b431c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "523fcbe3-81d4-463d-b566-54cad78cd3a6",
              "title": "Integration: Get Bookmarks",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1, User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Bookmarks a review: Review 1, User 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "60418c79-6710-43ac-a6d0-fc02dfe1d807",
                  "parentUUID": "523fcbe3-81d4-463d-b566-54cad78cd3a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get my bookmarks: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get my bookmarks: User 1",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .send(testInput.bookmarksList)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My bookmarks found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "5759df44-2310-4587-93dd-572dbc682ae9",
                  "parentUUID": "523fcbe3-81d4-463d-b566-54cad78cd3a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get bookmarks: list undefined",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get bookmarks: list undefined",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "d6a011a9-1138-4758-8157-9729199ed43f",
                  "parentUUID": "523fcbe3-81d4-463d-b566-54cad78cd3a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60418c79-6710-43ac-a6d0-fc02dfe1d807",
                "5759df44-2310-4587-93dd-572dbc682ae9",
                "d6a011a9-1138-4758-8157-9729199ed43f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3112715f-bafa-4562-84d3-34f65c5ce816",
              "title": "Integration: Update User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates user password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1Password)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated password.\"\n    });\n  });",
                  "err": {},
                  "uuid": "8043b1be-fa2c-43a4-8619-b191484a67ec",
                  "parentUUID": "3112715f-bafa-4562-84d3-34f65c5ce816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user password: weak password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password: weak password",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1PasswordWeak)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "7410b1b0-400a-4bbb-a1a6-a069f45a59df",
                  "parentUUID": "3112715f-bafa-4562-84d3-34f65c5ce816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated theme.\"\n    });\n  });",
                  "err": {},
                  "uuid": "70c61bf1-91fb-4a39-93d0-f5be7f947aeb",
                  "parentUUID": "3112715f-bafa-4562-84d3-34f65c5ce816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme: Invalid theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme: Invalid theme",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1wrong)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "11e2148a-84e8-40cc-b4fd-c2df937afed5",
                  "parentUUID": "3112715f-bafa-4562-84d3-34f65c5ce816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user details",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user details",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/updateUser/${userId}`)\n  .send(testInput.updateUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.data.should.includes(testInput.updateUser1);\n  });",
                  "err": {},
                  "uuid": "4e7eab1b-916c-4718-8f55-4a250c4a1bf2",
                  "parentUUID": "3112715f-bafa-4562-84d3-34f65c5ce816",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8043b1be-fa2c-43a4-8619-b191484a67ec",
                "7410b1b0-400a-4bbb-a1a6-a069f45a59df",
                "70c61bf1-91fb-4a39-93d0-f5be7f947aeb",
                "11e2148a-84e8-40cc-b4fd-c2df937afed5",
                "4e7eab1b-916c-4718-8f55-4a250c4a1bf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 241,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "html": "false"
      },
      "version": "5.2.0"
    }
  }
}