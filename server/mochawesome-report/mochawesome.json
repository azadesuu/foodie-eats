{
  "stats": {
    "suites": 20,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-04T22:29:33.693Z",
    "end": "2022-11-04T22:29:36.684Z",
    "duration": 2991,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c271883e-a953-4b75-904a-e756e1f5c70f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 8,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await connectDB();",
          "err": {},
          "uuid": "6d8efb1a-0edb-4e7c-93ab-90d0214be766",
          "parentUUID": "c271883e-a953-4b75-904a-e756e1f5c70f",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 6,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await closeDB();\nawait server.kill(() => {\n  console.log(\"Closing test server..\");\n  console.log(\"End of tests.\");\n  //the server is down when this is called. That won't take long. (<10s)\n});",
          "err": {},
          "uuid": "17f671a0-b05f-48b5-9a36-e34f7e73d871",
          "parentUUID": "c271883e-a953-4b75-904a-e756e1f5c70f",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "3b42145d-5113-42fa-94c5-d5322ac8d8cd",
          "title": "Unit tests ",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unit tests \"",
              "fullTitle": "Unit tests  \"after all\" hook in \"Unit tests \"",
              "timedOut": false,
              "duration": 74,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "c015310f-1750-433e-b810-3965c160ac2d",
              "parentUUID": "3b42145d-5113-42fa-94c5-d5322ac8d8cd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
              "title": "Registration ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Registers the user",
                  "fullTitle": "Unit tests  Registration  Registers the user",
                  "timedOut": false,
                  "duration": 661,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "d2a5b034-c23c-4c65-83f5-c2551833dd74",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (email)",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "d6ebba70-1441-4b3c-a38d-7bdb1e79abad",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (username)",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupUsername)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "6a7bebb7-a741-49d4-bb55-07245fa8465a",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the empty field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the empty field (email)",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserNoEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Username/email not defined.\"\n    });\n  });",
                  "err": {},
                  "uuid": "6701d2de-8ed7-4960-a1a0-a6ca32281174",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (username)",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidUname)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your username isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "99d6cd2b-caa9-4e2a-855a-282927fdf544",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "93162333-a8d0-4971-9200-aa5d92a9fa99",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "ee209922-91d5-4498-8a6b-0c7308fed2b7",
                  "parentUUID": "214c13da-6ba9-4ac8-ac92-99e4e86a32f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2a5b034-c23c-4c65-83f5-c2551833dd74",
                "d6ebba70-1441-4b3c-a38d-7bdb1e79abad",
                "6a7bebb7-a741-49d4-bb55-07245fa8465a",
                "6701d2de-8ed7-4960-a1a0-a6ca32281174",
                "99d6cd2b-caa9-4e2a-855a-282927fdf544",
                "93162333-a8d0-4971-9200-aa5d92a9fa99",
                "ee209922-91d5-4498-8a6b-0c7308fed2b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 810,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "adc3df94-9083-47d7-bc75-b3e358becc9c",
              "title": "Get Reviews ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get recent reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get recent reviews",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByRecent\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Recent reviews found\" });\n  });",
                  "err": {},
                  "uuid": "efd29ba8-89d6-467e-920b-7dbb21283b3d",
                  "parentUUID": "adc3df94-9083-47d7-bc75-b3e358becc9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get top reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get top reviews",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByLikes\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Most liked reviews found.\" });\n  });",
                  "err": {},
                  "uuid": "4ab255b7-f3c2-417d-ad7c-23cab5ff1137",
                  "parentUUID": "adc3df94-9083-47d7-bc75-b3e358becc9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efd29ba8-89d6-467e-920b-7dbb21283b3d",
                "4ab255b7-f3c2-417d-ad7c-23cab5ff1137"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "fb14f998-e833-44ab-88f3-af46d5a6e603",
              "title": "Get one user ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one user",
                  "fullTitle": "Unit tests  Get one user  Get one user",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/azadesuu\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "82ccec55-9a67-4f63-b550-3dbea5f5d726",
                  "parentUUID": "fb14f998-e833-44ab-88f3-af46d5a6e603",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't get invalid user",
                  "fullTitle": "Unit tests  Get one user  Doesn't get invalid user",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/aza\")\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "8b11c2b0-7dfc-40d9-b378-08e086b26d58",
                  "parentUUID": "fb14f998-e833-44ab-88f3-af46d5a6e603",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82ccec55-9a67-4f63-b550-3dbea5f5d726",
                "8b11c2b0-7dfc-40d9-b378-08e086b26d58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "c2a9f4e7-02d8-4f44-a01d-6c86b543b89b",
          "title": "Integration tests: Review methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"before all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 115,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "194e686d-36e1-499c-bd61-e9c6d52e1136",
              "parentUUID": "c2a9f4e7-02d8-4f44-a01d-6c86b543b89b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"after all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 66,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "03a30e96-c301-41bd-b379-97dd64d928b9",
              "parentUUID": "c2a9f4e7-02d8-4f44-a01d-6c86b543b89b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "77c50a7a-f45b-4bae-b6fe-e35e6a0a2e8a",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "a4ac2bf7-164f-42e4-aa22-b62214b95e74",
                  "parentUUID": "77c50a7a-f45b-4bae-b6fe-e35e6a0a2e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "c482ef84-6c41-429e-bf24-8c7f3de23cbe",
                  "parentUUID": "77c50a7a-f45b-4bae-b6fe-e35e6a0a2e8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4ac2bf7-164f-42e4-aa22-b62214b95e74",
                "c482ef84-6c41-429e-bf24-8c7f3de23cbe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 72,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "3ac4f641-cee5-4fe5-8619-e3e4ec1d7c71",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "0329487d-eac0-4016-a23b-a3bf258685a1",
                  "parentUUID": "3ac4f641-cee5-4fe5-8619-e3e4ec1d7c71",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "f12f36b3-6288-4ef3-a9a5-baba21ea44e1",
                  "parentUUID": "3ac4f641-cee5-4fe5-8619-e3e4ec1d7c71",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "c8e61124-606c-4963-9217-93fc68699499",
                  "parentUUID": "3ac4f641-cee5-4fe5-8619-e3e4ec1d7c71",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0329487d-eac0-4016-a23b-a3bf258685a1",
                "f12f36b3-6288-4ef3-a9a5-baba21ea44e1",
                "c8e61124-606c-4963-9217-93fc68699499"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 184,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "a5e48b5b-4fcf-4b01-b329-5b59bb19e306",
              "title": "Integration: Authenticate user",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Valid access token provided",
                  "fullTitle": "Integration tests: Review methods Integration: Authenticate user Valid access token provided",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/findTokenUser\")\n  .send(\"Authorization\", \"Bearer \" + access_token)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "5991a0e1-faab-4eb0-aeea-b825c41cfea7",
                  "parentUUID": "a5e48b5b-4fcf-4b01-b329-5b59bb19e306",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5991a0e1-faab-4eb0-aeea-b825c41cfea7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "fceeea95-fa5c-4a0f-81c1-d94702673ae7",
              "title": "Integration: Create Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 1",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "f8c56706-10b0-4833-a7ae-b1adfaf7ca87",
                  "parentUUID": "fceeea95-fa5c-4a0f-81c1-d94702673ae7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Creates a review: Review 2",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 2",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "7e8fc2ff-1110-45d0-9f22-070683b72abf",
                  "parentUUID": "fceeea95-fa5c-4a0f-81c1-d94702673ae7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (userId)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (userId)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongUserId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "5c155289-2886-4fa4-8a8c-dbb43fcead60",
                  "parentUUID": "fceeea95-fa5c-4a0f-81c1-d94702673ae7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (dateVisited)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (dateVisited)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongDateVisited)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "0758d4ee-018d-4328-9ef3-da119ec1f801",
                  "parentUUID": "fceeea95-fa5c-4a0f-81c1-d94702673ae7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8c56706-10b0-4833-a7ae-b1adfaf7ca87",
                "7e8fc2ff-1110-45d0-9f22-070683b72abf",
                "5c155289-2886-4fa4-8a8c-dbb43fcead60",
                "0758d4ee-018d-4328-9ef3-da119ec1f801"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "1a163b07-0f2e-4303-b53c-2c9490efab12",
              "title": "Integration: Update Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates a review: Review 1 (Price Range)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Price Range)",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewPriceRange)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "c18cf545-2ba4-44d4-8a50-01e2f2f923ae",
                  "parentUUID": "1a163b07-0f2e-4303-b53c-2c9490efab12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates a review: Review 1 (Description)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Description)",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewDescription)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "0bb63caa-29d2-4ab3-9872-8ee14609e4b4",
                  "parentUUID": "1a163b07-0f2e-4303-b53c-2c9490efab12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't update a review: Review (No Review Id) ",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Doesn't update a review: Review (No Review Id) ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewNoId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "a41bfafa-af26-468b-9826-089030035645",
                  "parentUUID": "1a163b07-0f2e-4303-b53c-2c9490efab12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c18cf545-2ba4-44d4-8a50-01e2f2f923ae",
                "0bb63caa-29d2-4ab3-9872-8ee14609e4b4",
                "a41bfafa-af26-468b-9826-089030035645"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "b6ec17d4-02b5-43aa-9dd3-94a4f56df183",
              "title": "Integration: Like Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Likes a review: Review 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully liked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "a9ea8fb5-6596-4892-a048-3525f507428b",
                  "parentUUID": "b6ec17d4-02b5-43aa-9dd3-94a4f56df183",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Un-likes a review: Review 1",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully unliked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "07abc252-bafe-4444-a30a-838de3931036",
                  "parentUUID": "b6ec17d4-02b5-43aa-9dd3-94a4f56df183",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to like a review: Review 1 (likeBool undefined)",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Failed to like a review: Review 1 (likeBool undefined)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "e8ef78c4-089d-4103-b89d-12c7a8d44bf2",
                  "parentUUID": "b6ec17d4-02b5-43aa-9dd3-94a4f56df183",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9ea8fb5-6596-4892-a048-3525f507428b",
                "07abc252-bafe-4444-a30a-838de3931036",
                "e8ef78c4-089d-4103-b89d-12c7a8d44bf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "eca8fc58-40fc-46f8-91e9-072a892e354f",
              "title": "Integration: Delete Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deletes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Deletes a review: Review 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review deleted.\"\n    });\n  });",
                  "err": {},
                  "uuid": "d157b461-d628-4a77-aede-035c1006c59e",
                  "parentUUID": "eca8fc58-40fc-46f8-91e9-072a892e354f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Fails to delete a review: Review 1 (already deleted) ",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Fails to delete a review: Review 1 (already deleted) ",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "c11650b8-fd40-4572-af0a-f163a0bec57f",
                  "parentUUID": "eca8fc58-40fc-46f8-91e9-072a892e354f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d157b461-d628-4a77-aede-035c1006c59e",
                "c11650b8-fd40-4572-af0a-f163a0bec57f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "9bfc5842-7928-4c0a-8879-f2e26eba1192",
          "title": "Integration tests: Account methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"before all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 105,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "2bfbcce3-a795-45eb-bcb4-0ec9f7b3f549",
              "parentUUID": "9bfc5842-7928-4c0a-8879-f2e26eba1192",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"after all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 73,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "baa8b209-0fd1-49a6-a579-90d42a77ffb9",
              "parentUUID": "9bfc5842-7928-4c0a-8879-f2e26eba1192",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "86107d6f-72d1-4ad2-b237-cf3f44cd7c18",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "93b792f6-7dcd-4ce0-898b-636cebe62a17",
                  "parentUUID": "86107d6f-72d1-4ad2-b237-cf3f44cd7c18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "6f9cbbfc-4f06-4b2e-a83f-8d5532c15547",
                  "parentUUID": "86107d6f-72d1-4ad2-b237-cf3f44cd7c18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93b792f6-7dcd-4ce0-898b-636cebe62a17",
                "6f9cbbfc-4f06-4b2e-a83f-8d5532c15547"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 74,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "f5408623-73b6-4e98-9bbd-9ce8a9e7ebd8",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "c337e0ab-2aa2-4142-8b75-209b44555adb",
                  "parentUUID": "f5408623-73b6-4e98-9bbd-9ce8a9e7ebd8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 135,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "9894af80-6f06-4274-8555-1151f8f38716",
                  "parentUUID": "f5408623-73b6-4e98-9bbd-9ce8a9e7ebd8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "8da51f40-c7cd-4848-94b8-e9e9cc918e89",
                  "parentUUID": "f5408623-73b6-4e98-9bbd-9ce8a9e7ebd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c337e0ab-2aa2-4142-8b75-209b44555adb",
                "9894af80-6f06-4274-8555-1151f8f38716",
                "8da51f40-c7cd-4848-94b8-e9e9cc918e89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 248,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "9043d775-44ce-488a-a824-882e2219389c",
              "title": "Integration: Get My Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get my reviews: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get My Reviews Get my reviews: User 1",
                  "timedOut": false,
                  "duration": 200,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/my-reviews/${userId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My reviews found.\"\n    });\n  });",
                  "err": {},
                  "uuid": "60ebc0a8-1359-40b1-8f0b-7d07b26e981b",
                  "parentUUID": "9043d775-44ce-488a-a824-882e2219389c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60ebc0a8-1359-40b1-8f0b-7d07b26e981b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 200,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "f525ab3b-5357-4260-8d43-e829a53f3f78",
              "title": "Integration: Get Other Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get other reviews: User 3 (list of 1)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 3 (list of 1)",
                  "timedOut": false,
                  "duration": 106,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId3}`)\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "e80fd22c-5a57-4bcb-8ea4-a676a389b4f0",
                  "parentUUID": "f525ab3b-5357-4260-8d43-e829a53f3f78",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get other reviews: User 2 (list of 0)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 2 (list of 0)",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId2}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(0, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "5998fd66-953c-489f-bf78-fff1bb151eb6",
                  "parentUUID": "f525ab3b-5357-4260-8d43-e829a53f3f78",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e80fd22c-5a57-4bcb-8ea4-a676a389b4f0",
                "5998fd66-953c-489f-bf78-fff1bb151eb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 128,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "d13517ae-3895-43d7-b302-00b5aad1bcbf",
              "title": "Integration: Bookmark Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "5f77dc1e-e9bb-472c-a6eb-c59651e2c0b1",
                  "parentUUID": "d13517ae-3895-43d7-b302-00b5aad1bcbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Un-bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was un-bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "05c61191-609d-4dbe-a824-e362255b5833",
                  "parentUUID": "d13517ae-3895-43d7-b302-00b5aad1bcbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "c0b925d7-77bd-4d54-94e7-13f6b2fdef1a",
                  "parentUUID": "d13517ae-3895-43d7-b302-00b5aad1bcbf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f77dc1e-e9bb-472c-a6eb-c59651e2c0b1",
                "05c61191-609d-4dbe-a824-e362255b5833",
                "c0b925d7-77bd-4d54-94e7-13f6b2fdef1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "11320ca6-c92a-45b7-ba6d-4569c0a22f42",
              "title": "Integration: Get Bookmarks",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1, User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Bookmarks a review: Review 1, User 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "b2a65722-9854-4409-9172-805583bc64b3",
                  "parentUUID": "11320ca6-c92a-45b7-ba6d-4569c0a22f42",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get my bookmarks: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get my bookmarks: User 1",
                  "timedOut": false,
                  "duration": 54,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .send(testInput.bookmarksList)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My bookmarks found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "b5fbabde-53fc-442a-8343-b23bd503f05e",
                  "parentUUID": "11320ca6-c92a-45b7-ba6d-4569c0a22f42",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get bookmarks: list undefined",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get bookmarks: list undefined",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "77c5364b-3f16-4c56-8090-66090cef62ed",
                  "parentUUID": "11320ca6-c92a-45b7-ba6d-4569c0a22f42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2a65722-9854-4409-9172-805583bc64b3",
                "b5fbabde-53fc-442a-8343-b23bd503f05e",
                "77c5364b-3f16-4c56-8090-66090cef62ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 85,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "e44a4c98-d7fc-4107-a219-69fe8f080406",
              "title": "Integration: Update User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates user password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password",
                  "timedOut": false,
                  "duration": 169,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1Password)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated password.\"\n    });\n  });",
                  "err": {},
                  "uuid": "bda79715-8863-4c01-b43b-66efd4c24762",
                  "parentUUID": "e44a4c98-d7fc-4107-a219-69fe8f080406",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user password: weak password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password: weak password",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1PasswordWeak)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "31a2a1f1-7628-48b9-98f1-e4d561e18e90",
                  "parentUUID": "e44a4c98-d7fc-4107-a219-69fe8f080406",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated theme.\"\n    });\n  });",
                  "err": {},
                  "uuid": "4324b2a3-e279-4874-bda5-1199c2ef40af",
                  "parentUUID": "e44a4c98-d7fc-4107-a219-69fe8f080406",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme: Invalid theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme: Invalid theme",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1wrong)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "6d175560-377b-4374-8e68-cb57ea517fef",
                  "parentUUID": "e44a4c98-d7fc-4107-a219-69fe8f080406",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user details",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user details",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/updateUser/${userId}`)\n  .send(testInput.updateUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.data.should.includes(testInput.updateUser1);\n  });",
                  "err": {},
                  "uuid": "60f7095d-d096-4d1d-986f-3394f2e0212e",
                  "parentUUID": "e44a4c98-d7fc-4107-a219-69fe8f080406",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bda79715-8863-4c01-b43b-66efd4c24762",
                "31a2a1f1-7628-48b9-98f1-e4d561e18e90",
                "4324b2a3-e279-4874-bda5-1199c2ef40af",
                "6d175560-377b-4374-8e68-cb57ea517fef",
                "60f7095d-d096-4d1d-986f-3394f2e0212e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 236,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 1000000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "html": "false"
      },
      "version": "5.2.0"
    }
  }
}