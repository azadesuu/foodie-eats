{
  "stats": {
    "suites": 20,
    "tests": 53,
    "passes": 53,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-05T17:35:28.266Z",
    "end": "2022-11-05T17:35:30.851Z",
    "duration": 2585,
    "testsRegistered": 53,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5719358d-c538-45ae-8318-dedc59720fa5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await connectDB();",
          "err": {},
          "uuid": "23c4ad6e-2c7e-4bde-a324-77e8ab849909",
          "parentUUID": "5719358d-c538-45ae-8318-dedc59720fa5",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 5,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await closeDB();\nawait server.kill(() => {\n  console.log(\"Closing test server..\");\n  console.log(\"End of tests.\");\n  //the server is down when this is called. That won't take long. (<10s)\n});",
          "err": {},
          "uuid": "0e6257ae-7385-4a23-bb7d-967ff1a707e9",
          "parentUUID": "5719358d-c538-45ae-8318-dedc59720fa5",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "1e8080db-9c59-4ab2-93f0-f13ee8744866",
          "title": "Unit tests ",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unit tests \"",
              "fullTitle": "Unit tests  \"after all\" hook in \"Unit tests \"",
              "timedOut": false,
              "duration": 62,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "fc4b36fc-4e56-48b7-a577-ee3bef81b38c",
              "parentUUID": "1e8080db-9c59-4ab2-93f0-f13ee8744866",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "89304a7a-5f79-4f15-9e45-6ac70d336044",
              "title": "Registration ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Registers the user",
                  "fullTitle": "Unit tests  Registration  Registers the user",
                  "timedOut": false,
                  "duration": 657,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "86513c89-9d91-4b21-a698-024d89e4acb8",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (email)",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "26e36aca-02e3-439e-b070-131bde995ad1",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the duplicate user (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the duplicate user (username)",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserDupUsername)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"That username/email is already taken.\"\n    });\n  });",
                  "err": {},
                  "uuid": "b943f1b9-4da5-42a4-a66e-4d5a123c2f68",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the empty field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the empty field (email)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserNoEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Username/email not defined.\"\n    });\n  });",
                  "err": {},
                  "uuid": "746a5cb7-5f08-433a-8b92-4b711892ba99",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (username)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (username)",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidUname)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your username isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "272cf51d-ea18-45b6-9b91-cf951165af4b",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "3a4eaf1d-64ca-42ab-84de-6aba90debc27",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't register the invalid field (email)",
                  "fullTitle": "Unit tests  Registration  Doesn't register the invalid field (email)",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/signup\")\n  .send(testInput.newUserInvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Your email isn't valid.\"\n    });\n  });",
                  "err": {},
                  "uuid": "61f90863-f33a-435d-b542-72a58941cf51",
                  "parentUUID": "89304a7a-5f79-4f15-9e45-6ac70d336044",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86513c89-9d91-4b21-a698-024d89e4acb8",
                "26e36aca-02e3-439e-b070-131bde995ad1",
                "b943f1b9-4da5-42a4-a66e-4d5a123c2f68",
                "746a5cb7-5f08-433a-8b92-4b711892ba99",
                "272cf51d-ea18-45b6-9b91-cf951165af4b",
                "3a4eaf1d-64ca-42ab-84de-6aba90debc27",
                "61f90863-f33a-435d-b542-72a58941cf51"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 799,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "217394ed-85f0-4d38-aaf5-dae965bf43c5",
              "title": "Get Reviews ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get recent reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get recent reviews",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByRecent\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Recent reviews found\" });\n  });",
                  "err": {},
                  "uuid": "fd2dfacd-ac5a-4002-948e-c959abd7fe48",
                  "parentUUID": "217394ed-85f0-4d38-aaf5-dae965bf43c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get top reviews",
                  "fullTitle": "Unit tests  Get Reviews  Get top reviews",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReviewsByLikes\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Most liked reviews found.\" });\n  });",
                  "err": {},
                  "uuid": "94960db8-18a0-46d1-9552-19a758372cc0",
                  "parentUUID": "217394ed-85f0-4d38-aaf5-dae965bf43c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd2dfacd-ac5a-4002-948e-c959abd7fe48",
                "94960db8-18a0-46d1-9552-19a758372cc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "6b157cc0-23c1-4860-9db7-f1bf24c6d05d",
              "title": "Get one user ",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one user",
                  "fullTitle": "Unit tests  Get one user  Get one user",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/azadesuu\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "0ce76325-9d76-4050-abc1-f1b3a19ca34f",
                  "parentUUID": "6b157cc0-23c1-4860-9db7-f1bf24c6d05d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't get invalid user",
                  "fullTitle": "Unit tests  Get one user  Doesn't get invalid user",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/aza\")\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "81e9fe53-706f-44d2-b8ef-c5ab8fbed8be",
                  "parentUUID": "6b157cc0-23c1-4860-9db7-f1bf24c6d05d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ce76325-9d76-4050-abc1-f1b3a19ca34f",
                "81e9fe53-706f-44d2-b8ef-c5ab8fbed8be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 45,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 500000
        },
        {
          "uuid": "5d0abfec-bdfe-422f-bcb6-29ff31f24bc5",
          "title": "Integration tests: Review methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"before all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 115,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "6790667f-d6e6-4c16-b2fc-2a5f347fafc8",
              "parentUUID": "5d0abfec-bdfe-422f-bcb6-29ff31f24bc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Review methods\"",
              "fullTitle": "Integration tests: Review methods \"after all\" hook in \"Integration tests: Review methods\"",
              "timedOut": false,
              "duration": 62,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "91e9c116-7f87-4a1c-8ede-7c7baed2a794",
              "parentUUID": "5d0abfec-bdfe-422f-bcb6-29ff31f24bc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "fb2107f6-6405-4f72-adf0-45210c2d48fd",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "d2942988-546e-4465-8f21-a077b9f29433",
                  "parentUUID": "fb2107f6-6405-4f72-adf0-45210c2d48fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Review methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "53663df3-f51e-406c-a219-39c304d0bc0e",
                  "parentUUID": "fb2107f6-6405-4f72-adf0-45210c2d48fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2942988-546e-4465-8f21-a077b9f29433",
                "53663df3-f51e-406c-a219-39c304d0bc0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 68,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "a7c2c477-def9-4543-929a-98bdd311d546",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    assert.equal(true, res.body !== undefined);\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "31ffb132-e8b9-4829-9abc-278b07644719",
                  "parentUUID": "a7c2c477-def9-4543-929a-98bdd311d546",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 77,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "7c26611b-05bc-4d5f-afad-73108bf32e50",
                  "parentUUID": "a7c2c477-def9-4543-929a-98bdd311d546",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Review methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "128bdc41-658b-4a8b-b570-4d00d2b9e99d",
                  "parentUUID": "a7c2c477-def9-4543-929a-98bdd311d546",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31ffb132-e8b9-4829-9abc-278b07644719",
                "7c26611b-05bc-4d5f-afad-73108bf32e50",
                "128bdc41-658b-4a8b-b570-4d00d2b9e99d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 178,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "94074efa-5813-4a22-9cbd-e023f225dc41",
              "title": "Integration: Authenticate user",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Valid access token provided",
                  "fullTitle": "Integration tests: Review methods Integration: Authenticate user Valid access token provided",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/findTokenUser\")\n  .send(\"Authorization\", \"Bearer \" + access_token)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "610be196-e4f8-4fdd-b059-f75505afec18",
                  "parentUUID": "94074efa-5813-4a22-9cbd-e023f225dc41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "610be196-e4f8-4fdd-b059-f75505afec18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "c49930f3-9c47-45c0-a9cb-ee9518c603dc",
              "title": "Integration: Create Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "819ce50c-5f74-44d9-b536-27feb005c761",
                  "parentUUID": "c49930f3-9c47-45c0-a9cb-ee9518c603dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Creates a review: Review 2",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Creates a review: Review 2",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReview2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review created.\"\n    });\n  });",
                  "err": {},
                  "uuid": "285927a9-da89-427a-afd6-b836bbaa85f8",
                  "parentUUID": "c49930f3-9c47-45c0-a9cb-ee9518c603dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (userId)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (userId)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongUserId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "eeceb776-783f-45e1-8f71-4606ff4841c1",
                  "parentUUID": "c49930f3-9c47-45c0-a9cb-ee9518c603dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't create review: missing fields (dateVisited)",
                  "fullTitle": "Integration tests: Review methods Integration: Create Review Doesn't create review: missing fields (dateVisited)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(\"/review/createReview\")\n  .send(testInput.createReviewWrongDateVisited)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "507cfab1-d18a-4766-9ce6-73aafe04af21",
                  "parentUUID": "c49930f3-9c47-45c0-a9cb-ee9518c603dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "819ce50c-5f74-44d9-b536-27feb005c761",
                "285927a9-da89-427a-afd6-b836bbaa85f8",
                "eeceb776-783f-45e1-8f71-4606ff4841c1",
                "507cfab1-d18a-4766-9ce6-73aafe04af21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "dfa6900d-7725-4f32-b937-54c6d11c302e",
              "title": "Integration: Update Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates a review: Review 1 (Price Range)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Price Range)",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewPriceRange)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "8f536c32-ea5e-49cd-b797-b918c2d99359",
                  "parentUUID": "dfa6900d-7725-4f32-b937-54c6d11c302e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates a review: Review 1 (Description)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Description)",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewDescription)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n  });",
                  "err": {},
                  "uuid": "247cb106-466a-4344-836e-ba0dd1eb5026",
                  "parentUUID": "dfa6900d-7725-4f32-b937-54c6d11c302e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates a review: Review 1 (Private)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Private)",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewPrivate)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n    res.body.data.should.includes({\n      isPublic: false\n    });\n  });",
                  "err": {},
                  "uuid": "0afd4a3c-dcc5-4654-a995-91309a3cd852",
                  "parentUUID": "dfa6900d-7725-4f32-b937-54c6d11c302e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates a review: Review 1 (Public)",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Updates a review: Review 1 (Public)",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewPublic)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review updated.\"\n    });\n    res.body.data.should.includes({\n      isPublic: true\n    });\n  });",
                  "err": {},
                  "uuid": "990018b0-aaf1-4298-b073-bbb488bd639d",
                  "parentUUID": "dfa6900d-7725-4f32-b937-54c6d11c302e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't update a review: Review (No Review Id) ",
                  "fullTitle": "Integration tests: Review methods Integration: Update Review Doesn't update a review: Review (No Review Id) ",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(\"/review/updateReview\")\n  .send(testInput.updateReviewNoId)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "024129a8-403f-4d17-a559-54fb33112b5d",
                  "parentUUID": "dfa6900d-7725-4f32-b937-54c6d11c302e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f536c32-ea5e-49cd-b797-b918c2d99359",
                "247cb106-466a-4344-836e-ba0dd1eb5026",
                "0afd4a3c-dcc5-4654-a995-91309a3cd852",
                "990018b0-aaf1-4298-b073-bbb488bd639d",
                "024129a8-403f-4d17-a559-54fb33112b5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "94234c82-8176-43b8-8087-fb989d05bb70",
              "title": "Integration: Like Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Likes a review: Review 1",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully liked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "7fc98dac-34be-44bf-b8f2-7d4b257b414c",
                  "parentUUID": "94234c82-8176-43b8-8087-fb989d05bb70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-likes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Un-likes a review: Review 1",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully unliked the review\"\n    });\n  });",
                  "err": {},
                  "uuid": "893a2c8b-4610-4612-ad84-e0f3b4923892",
                  "parentUUID": "94234c82-8176-43b8-8087-fb989d05bb70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to like a review: Review 1 (likeBool undefined)",
                  "fullTitle": "Integration tests: Review methods Integration: Like Review Failed to like a review: Review 1 (likeBool undefined)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/review/like/${userId}/${reviewId}`)\n  .send({ likeBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Like boolean was not received.\"\n    });\n  });",
                  "err": {},
                  "uuid": "c767b575-239a-4651-9fa2-406bfdce1afe",
                  "parentUUID": "94234c82-8176-43b8-8087-fb989d05bb70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fc98dac-34be-44bf-b8f2-7d4b257b414c",
                "893a2c8b-4610-4612-ad84-e0f3b4923892",
                "c767b575-239a-4651-9fa2-406bfdce1afe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "43371615-006e-492a-9fec-291d77fa6357",
              "title": "Integration: Delete Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deletes a review: Review 1",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Deletes a review: Review 1",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review deleted.\"\n    });\n  });",
                  "err": {},
                  "uuid": "c5f9ad98-0840-4ef0-b3a5-d61f2b39091f",
                  "parentUUID": "43371615-006e-492a-9fec-291d77fa6357",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Fails to delete a review: Review 1 (already deleted) ",
                  "fullTitle": "Integration tests: Review methods Integration: Delete Review Fails to delete a review: Review 1 (already deleted) ",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .delete(`/review/delete/${reviewId}`)\n  .then(function(res) {\n    assert.equal(204, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "cd12dd7a-17a0-4f3b-91b0-cd98e97566d9",
                  "parentUUID": "43371615-006e-492a-9fec-291d77fa6357",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5f9ad98-0840-4ef0-b3a5-d61f2b39091f",
                "cd12dd7a-17a0-4f3b-91b0-cd98e97566d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 500000
        },
        {
          "uuid": "ebc09690-ca18-4192-9a9c-c4ae0c6108ba",
          "title": "Integration tests: Account methods",
          "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
          "file": "\\test\\apptest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"before all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 105,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await clearCollections();\nawait User.insertMany(testInput.userTests);\nawait Review.insertMany(testInput.reviewTests);",
              "err": {},
              "uuid": "7f6edab2-7b04-45c4-a64d-aac3c9e1452a",
              "parentUUID": "ebc09690-ca18-4192-9a9c-c4ae0c6108ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration tests: Account methods\"",
              "fullTitle": "Integration tests: Account methods \"after all\" hook in \"Integration tests: Account methods\"",
              "timedOut": false,
              "duration": 65,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clearing collections..\");\nawait clearCollections();",
              "err": {},
              "uuid": "b2379916-eb89-4b4c-96be-76d898699e41",
              "parentUUID": "ebc09690-ca18-4192-9a9c-c4ae0c6108ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "790cc372-b9a8-48e2-baae-c81774cd78f0",
              "title": "Get inserted User/Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get one review",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one review",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/review/getReview/6354ef7ed7bf245d8940dd72\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"Review found\" });\n  });",
                  "err": {},
                  "uuid": "75f9e38e-7196-408a-9c86-a4bde9863f72",
                  "parentUUID": "790cc372-b9a8-48e2-baae-c81774cd78f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get one user",
                  "fullTitle": "Integration tests: Account methods Get inserted User/Review Get one user",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(\"/account/profile/celenesaw\")\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({ message: \"User was found by username\" });\n  });",
                  "err": {},
                  "uuid": "93a78700-9aa3-4553-b4c0-a0324898598a",
                  "parentUUID": "790cc372-b9a8-48e2-baae-c81774cd78f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75f9e38e-7196-408a-9c86-a4bde9863f72",
                "93a78700-9aa3-4553-b4c0-a0324898598a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "d9889d35-e9eb-4e70-bc04-29b53bcad94c",
              "title": "Integration: Log in User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Logs in the user",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Logs in the user",
                  "timedOut": false,
                  "duration": 77,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.integrationUser)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    // setting tokens for user_auth\n    access_token = res.body;\n  });",
                  "err": {},
                  "uuid": "0f915d54-5417-4031-8573-d4b1a477ed0c",
                  "parentUUID": "d9889d35-e9eb-4e70-bc04-29b53bcad94c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong password)",
                  "timedOut": false,
                  "duration": 78,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "9e12e73d-29f2-4191-a865-62f4713e28ba",
                  "parentUUID": "d9889d35-e9eb-4e70-bc04-29b53bcad94c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Doesn't log in the user (wrong email+password)",
                  "fullTitle": "Integration tests: Account methods Integration: Log in User Doesn't log in the user (wrong email+password)",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(\"/login\")\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"No user was found with the given user/email\"\n    });\n  });",
                  "err": {},
                  "uuid": "28ad8667-2cea-40c5-9790-8107078b6532",
                  "parentUUID": "d9889d35-e9eb-4e70-bc04-29b53bcad94c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f915d54-5417-4031-8573-d4b1a477ed0c",
                "9e12e73d-29f2-4191-a865-62f4713e28ba",
                "28ad8667-2cea-40c5-9790-8107078b6532"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 176,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "a3c43644-bca7-433b-a3e4-1a7d594e2ee3",
              "title": "Integration: Get My Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get my reviews: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get My Reviews Get my reviews: User 1",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/my-reviews/${userId}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My reviews found.\"\n    });\n  });",
                  "err": {},
                  "uuid": "768365c8-db13-4da4-a0ca-2210781dcff8",
                  "parentUUID": "a3c43644-bca7-433b-a3e4-1a7d594e2ee3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "768365c8-db13-4da4-a0ca-2210781dcff8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "85daf95e-d8c0-4788-9c1e-0bb602f9884a",
              "title": "Integration: Get Other Reviews",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get other reviews: User 3 (list of 1)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 3 (list of 1)",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId3}`)\n  .send(testInput.wrongIntegrationUser2)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "6a7db276-89e2-4776-ae95-14445f9ea39f",
                  "parentUUID": "85daf95e-d8c0-4788-9c1e-0bb602f9884a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get other reviews: User 2 (list of 0)",
                  "fullTitle": "Integration tests: Account methods Integration: Get Other Reviews Get other reviews: User 2 (list of 0)",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .get(`/account/other-reviews/${userId2}`)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Other reviews found.\"\n    });\n    assert.equal(0, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "8efb2462-b3c0-4e32-b0cf-12df1b28cd81",
                  "parentUUID": "85daf95e-d8c0-4788-9c1e-0bb602f9884a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a7db276-89e2-4776-ae95-14445f9ea39f",
                "8efb2462-b3c0-4e32-b0cf-12df1b28cd81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "b0e221b2-8751-4169-a3ed-26da9c21d5f4",
              "title": "Integration: Bookmark Review",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "7b7b21e9-c650-44b9-abe0-a9a40112c7b1",
                  "parentUUID": "b0e221b2-8751-4169-a3ed-26da9c21d5f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Un-bookmarks a review: Review 1",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Un-bookmarks a review: Review 1",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: true })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was un-bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "2258806e-11a6-42d4-ab76-ecebc0be36f9",
                  "parentUUID": "b0e221b2-8751-4169-a3ed-26da9c21d5f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "fullTitle": "Integration tests: Account methods Integration: Bookmark Review Failed to bookmark a review: Review 1 (bookmarkedBool undefined)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: undefined })\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"Bookmarked bool was not received.\"\n    });\n  });",
                  "err": {},
                  "uuid": "a33e193f-a191-4196-aad7-c22510f00c1f",
                  "parentUUID": "b0e221b2-8751-4169-a3ed-26da9c21d5f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b7b21e9-c650-44b9-abe0-a9a40112c7b1",
                "2258806e-11a6-42d4-ab76-ecebc0be36f9",
                "a33e193f-a191-4196-aad7-c22510f00c1f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "4532dce2-d60a-4152-b09e-f49fd865b08a",
              "title": "Integration: Get Bookmarks",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Bookmarks a review: Review 1, User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Bookmarks a review: Review 1, User 1",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/bookmark/${reviewId}/${userId}`)\n  .send({ bookmarkedBool: false })\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Review was bookmarked.\"\n    });\n  });",
                  "err": {},
                  "uuid": "8c7b4434-4433-4cfd-a8aa-a614980c88ef",
                  "parentUUID": "4532dce2-d60a-4152-b09e-f49fd865b08a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get my bookmarks: User 1",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get my bookmarks: User 1",
                  "timedOut": false,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .send(testInput.bookmarksList)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"My bookmarks found.\"\n    });\n    assert.equal(1, res.body.data.length);\n  });",
                  "err": {},
                  "uuid": "4e7e02fa-8546-4b26-b243-ed99892a44f8",
                  "parentUUID": "4532dce2-d60a-4152-b09e-f49fd865b08a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get bookmarks: list undefined",
                  "fullTitle": "Integration tests: Account methods Integration: Get Bookmarks Get bookmarks: list undefined",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .post(`/account/my-bookmarks/get`)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "1f61705d-d3d5-49cb-a2ee-a4a7163c3d27",
                  "parentUUID": "4532dce2-d60a-4152-b09e-f49fd865b08a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c7b4434-4433-4cfd-a8aa-a614980c88ef",
                "4e7e02fa-8546-4b26-b243-ed99892a44f8",
                "1f61705d-d3d5-49cb-a2ee-a4a7163c3d27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 79,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            },
            {
              "uuid": "e845a48e-5615-4527-b991-c883bde3a89e",
              "title": "Integration: Update User",
              "fullFile": "C:\\Users\\sawce\\OneDrive\\Desktop\\REACT\\itp\\image\\itp-sem2-all-for-one\\server\\test\\apptest.js",
              "file": "\\test\\apptest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Updates user password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1Password)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated password.\"\n    });\n  });",
                  "err": {},
                  "uuid": "616b357c-469b-446f-8561-012cb73d4606",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user password: weak password",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user password: weak password",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .put(`/account/updatePassword`)\n  .send(testInput.updateUser1PasswordWeak)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n  });",
                  "err": {},
                  "uuid": "d6fe9770-5d45-4d35-bec3-97f69e1fe2cc",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.should.includes({\n      message: \"Successfully updated theme.\"\n    });\n  });",
                  "err": {},
                  "uuid": "3a2dba23-1b0e-4542-880e-a9e654203793",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme: Undefined Theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme: Undefined Theme",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1Undefined)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"New theme is not defined.\"\n    });\n  });",
                  "err": {},
                  "uuid": "55fec499-dbe2-4f1e-a78e-0a722b41e9b2",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user theme: Invalid theme",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user theme: Invalid theme",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/changeTheme/${userId}`)\n  .send(testInput.changeThemeUser1wrong)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({\n      message: \"New theme is not available.\"\n    });\n  });",
                  "err": {},
                  "uuid": "4121ca7d-73a7-430b-8d62-6f52a8183f57",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user details",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user details",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/updateUser/${userId}`)\n  .send(testInput.updateUser1)\n  .then(function(res) {\n    assert.equal(200, res.statusCode);\n    res.body.data.should.includes(testInput.updateUser1);\n  });",
                  "err": {},
                  "uuid": "11a00699-b680-4117-b31d-0bc9fad0a332",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user details: Invalid username",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user details: Invalid username",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/updateUser/${userId}`)\n  .send(testInput.updateUser1InvalidUsername)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({ message: \"Username/Email is not valid.\" });\n  });",
                  "err": {},
                  "uuid": "05610701-f027-4772-9a56-b711ff154d56",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Updates user details: Invalid email",
                  "fullTitle": "Integration tests: Account methods Integration: Update User Updates user details: Invalid email",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request(app)\n  .patch(`/account/updateUser/${userId}`)\n  .send(testInput.updateUser1InvalidEmail)\n  .then(function(res) {\n    assert.equal(400, res.statusCode);\n    res.body.should.includes({ message: \"Username/Email is not valid.\" });\n  });",
                  "err": {},
                  "uuid": "c3355f06-1e03-4e99-a4a0-c613d33bbd1c",
                  "parentUUID": "e845a48e-5615-4527-b991-c883bde3a89e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "616b357c-469b-446f-8561-012cb73d4606",
                "d6fe9770-5d45-4d35-bec3-97f69e1fe2cc",
                "3a2dba23-1b0e-4542-880e-a9e654203793",
                "55fec499-dbe2-4f1e-a78e-0a722b41e9b2",
                "4121ca7d-73a7-430b-8d62-6f52a8183f57",
                "11a00699-b680-4117-b31d-0bc9fad0a332",
                "05610701-f027-4772-9a56-b711ff154d56",
                "c3355f06-1e03-4e99-a4a0-c613d33bbd1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 223,
              "root": false,
              "rootEmpty": false,
              "_timeout": 500000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 500000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 500000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "html": "true"
      },
      "version": "5.2.0"
    }
  }
}